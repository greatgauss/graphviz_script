
digraph automata_0 {
	size = "100, 100";
	fontname = "Microsoft YaHei";
	fontsize = 20;
	node [shape = record, fontname = "Microsoft YaHei", fontsize = 30];
	edge [fontname = "Microsoft YaHei", fontsize = 30];
	Initial [ style = filled, shape = doublecircle, color=lightgrey ];
	Initial -> DriverLoaded [ label = " " ];
	Initial-> DriverUnloaded  [ label = " ",color=red ];
	DriverUnloaded   -> WaitForP2pDisable [ label = "CMD_LOAD_DRIVER\n/ send WIFI_ENABLE_PENDING to WifiP2pService" ,color=red];
	WaitForP2pDisable -> WaitForP2pDisable [ label = "CMD_START_SUPP \n/ DeferMsg" ];
	WaitForP2pDisable -> DriverLoading [ label = "WIFI_ENABLE_PROCEED" ,color=red];
	DriverLoading -> DriverLoading [ label = "@ start thread to run WN.loadDriver() \n @ send CMD_LOAD_DRIVER_OK ",color=red,fontcolor=red ];
	DriverLoading -> DriverLoading [ label = "CMD_START_SUPP \n/ DeferMsg " ];
	DriverLoading  -> DriverLoaded [ label = "CMD_LOAD_DRIVER_OK ",color=red ];
	DriverLoaded  -> SuppStarting [ label = "CMD_START_SUPP\n/ NMS.wifiFirmwareReload() \n WN.startSupplicant() \n //WMtr connect to supplicant and monitor it\nWMtr.startMonitoring() ",color=red,fontcolor=red ];
	SuppStarting  -> DriverStarted [ label = "SUP_CONNECTIION_EVENT \n/send SUPP_CONNECTION_CHANGE_ACTION ",color=red ];
	DriverStarted -> Disconnected[ label = "@ WN.reconnectCommand()\n@ transitionTo(Disconnected) ",color=red ];
	Disconnected -> Disconnected[ label = "SUP_STATE_CHANGE_EVENT |\n SCAN_RESULTS_EVENT |\n CMD_START_SCAN" ];
	Disconnected -> Connecting[ label = "NETWORK_CONNECTION_EVENT\n/ ^ transitionTo(Connecting) ",color=red ];
	Connecting -> Connecting[ label = "@ makeDhcpStateMachine\n @ send CMD_START_DHCP to DhcpSM ",color=red,fontcolor=red ];
	Connecting -> Connected[ label = "CMD_POST_DHCP_ACTION\n/handleSuccessfulIpCfg() ",color=red,fontcolor=red ];
	Connected -> SupplicantStopping[ label = "CMD_STOP_SUPP\n/^^^ transitionTo(SupplicantStopping) " ];
	SupplicantStopping-> SupplicantStopping[ label = "@ WN.stopSupplicant() \n @ send CMD_STOP_DHCP to DhcpSM " ];
	SupplicantStopping-> SupplicantStopping[ label = "CMD_UNLOAD_DRIVER\n DeferMsg " ];
	SupplicantStopping-> DriverLoaded[ label = "SUP_DISCONNECTION_EVENT\n/ WN.killSupplicant() " ];
	DriverLoaded -> DriverUnloading[ label = "CMD_UNLOAD_DRIVER " ];
	DriverUnloading -> DriverUnloading[ label = "@ WN.unloadDriver() \n @ send CMD_UNLOAD_DRIVER_OK" ];
	DriverUnloading -> DriverUnloaded[ label = "CMD_UNLOAD_DRIVER_OK "];
	"WifiStateMachine: ICS: Enable Wifi" [ shape = plaintext ];
}

